#!agena

jack2vm_dir := os.dirname(os.realpath(io.pcall(if os.iswindows() then 'where' else 'which' fi & ' jack2vm')[1]))
jack2vm_dir := if os.isdir(jack2vm_dir) then jack2vm_dir else '.' fi
run(jack2vm_dir & '/../lib/file_base_name')
run(jack2vm_dir & '/parse_args')
run(jack2vm_dir & '/symbol')
run(jack2vm_dir & '/symbol_table')
run(jack2vm_dir & '/class')
run(jack2vm_dir & '/label_maker')
run(jack2vm_dir & '/subroutine')
run(jack2vm_dir & '/token')
run(jack2vm_dir & '/tokeniser')
run(jack2vm_dir & '/parser')
run(jack2vm_dir & '/vm_block')

main := proc() is
	#-- get names of input and output files from command line args
	local file_names, out_dir := parse_args()

	local vm_files := []

	for i, file_name in file_names do
		print('Compiling "' & file_name & '"...')
		#-- tokenise the file
		local tokens := new_tokeniser(file_name)@@tokenise()

		#-- parse the file
		vm_files[i] := out_dir & '/' & file_base_name(file_name) & '.vm'
		new_parser(tokens, vm_files[i])@@parse()
	od
end

main()