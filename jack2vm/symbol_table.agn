new_symbol_table := proc() is

	local symbol_table := [
		'symbols' ~ [],
		'counters' ~ []
	]

	proc symbol_table@@add_symbol(var_type, name, segment) is
		if self.counters[segment] = null then
			self.counters[segment] := 0
		fi
		local symbol := new_symbol(var_type, name, segment, self.counters[segment])
		self.symbols[name] := symbol
		inc self.counters[segment]
	end

	proc symbol_table@@get_symbol_data(var, func_on_symbol) is
		local symbol := self.symbols[var]
		if symbol = null then
			return null
		fi
		return func_on_symbol(symbol)
	end


	proc symbol_table@@var_to_vm(var) is
		return self@@get_symbol_data(var, << (symbol) -> symbol.segment & ' ' & symbol.offset >>)
	end

	proc symbol_table@@var_type(var) is
		return self@@get_symbol_data(var, << (symbol) -> symbol.var_type >>)
	end

	return symbol_table

end