#!agena

#-- Program that translates VM code into Hack assembly
#-- Written by Abraham Murciano and Elad Harizy

run '../lib/file_base_name.agn'
run '../lib/input.agn'
run 'parse_args.agn'
run 'asm_gen.agn'
run 'parser.agn'

main := proc() is
	local fin_names, fout_name := parse_args('asm')
	try
		asm_gen@@init(fout_name)
		io.writeline('Generating assembly to file "' & fout_name & '".')
	catch msg then
		print('Error: Could not create or open output file "' & fout_name & '".')
		local dirname := os.dirname(fout_name)
		if not os.isdir(dirname) then
			print('Directory "' & dirname & '" does not exist.')
		fi
		return
	yrt

	for fin_name in fin_names do
		io.write('Compiling file "' & fin_name & '"... ')
		asm_gen@@set_file_name(fin_name)
		local parser := new_parser()
		local vm_command := null
		local i := 1
		try
			for keys line in io.lines(fin_name) do
				vm_command := line
				parser@@parse_line(line)
				i++
			od
			io.write('done\n')
		catch msg then
			print('\nError in "' & fin_name & '" on line ' & i & ' near "' & vm_command & '".')
			print(msg)
		yrt
	od

	asm_gen@@destruct()
end

main()